{"version":3,"sources":["redux/ducks/users/index.js","lib/Icon.js","components/LivingWill.js","components/Etsy.js","components/PubBar.js","components/Home.js","components/App.js","lib/serviceWorker.js","redux/store.js","index.js"],"names":["initialState","users","state","action","type","payload","getUsers","dispatch","axios","get","then","resp","data","props","className","icon","id","href","to","path","component","LivingWill","Etsy","PubBar","Icon","App","useSelector","appState","userState","useDispatch","useEffect","useUsers","console","log","exact","Home","Boolean","window","location","hostname","match","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","reducers","enhancer","applyMiddleware","thunk","store","createStore","Main","children","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.645769a6.chunk.js","sourcesContent":["import { useEffect } from \"react\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport axios from \"axios\"\n\n// action definitions\nconst GET_USERS = \"users/GET_USERS\"\n\n// initial state\nconst initialState = {\n  users: []\n}\n\n// reducer\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case GET_USERS:\n      return { ...state, users: action.payload }\n    default:\n      return state\n  }\n}\n\n// action creators\nconst getUsers = () => {\n  return dispatch => {\n    axios.get(\"/users\").then(resp => {\n      dispatch({\n        type: GET_USERS,\n        payload: resp.data\n      })\n    })\n  }\n}\n\n// custom hooks\nexport function useUsers() {\n  const users = useSelector(appState => appState.userState.users)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(getUsers())\n  }, [dispatch])\n\n  return { users }\n}\n","import React from \"react\"\nimport \"font-awesome/css/font-awesome.min.css\"\n\nexport default function(props) {\n  return (\n    <div>\n      <i className={\"fa fa-\" + props.icon}></i>\n    </div>\n  )\n}\n","import React from \"react\"\n\nimport \"../styles/LivingWill.css\"\n\nexport default props => {\n  return (\n    <div className=\"container-x\">\n      <span className=\"quote\">\n        My Living Will Project is a online version of a living will. Created\n        with mainly React.js\n      </span>\n      <div className=\"SRQ-pic-LW\"></div>\n    </div>\n  )\n}\n","import React from \"react\"\n\nimport \"../styles/LivingWill.css\"\n\nexport default props => {\n  return (\n    <div className=\"container-x\">\n      <span className=\"quote\">\n        My ETSY is a online version of a living will. Created with mainly\n        React.js\n      </span>\n      <div className=\"SRQ-pic-ETSY\">box image</div>\n    </div>\n  )\n}\n","import React from \"react\"\n\nimport \"../styles/LivingWill.css\"\n\nexport default props => {\n  return (\n    <div className=\"container-x\">\n      <span className=\"quote\">\n        The Pub Bar Project was a two people project where we learn how to push\n        and pull each others code from a master and create branches to design a\n        returants or bar in thise case WebSite.\n      </span>\n      <div className=\"SRQ-pic-Pub\"></div>\n    </div>\n  )\n}\n","import React from \"react\"\n\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\"\nimport Icon from \"../lib/Icon\"\nimport LivingWill from \"./LivingWill\"\nimport Etsy from \"./Etsy\"\nimport PubBar from \"./PubBar\"\n\nimport { useEffect } from \"react\"\n\nexport default props => {\n  return (\n    <div className=\"Container-1\">\n      <div className=\"Container-0\">\n        <div className=\"Container\">\n          <div className=\"NavBar\">\n            <div id=\"NavCon\">\n              <a>LOGO</a>\n              <a href=\"#About\">ABOUT</a>\n              <a href=\"#Projects\">PROJECTS</a>\n              <a href=\"#Skills\">SKILLS</a>\n              <a href=\"#Contact\">CONTACT</a>\n            </div>\n          </div>\n          <header id=\"Home\">\n            <div className=\"content\">\n              <div className=\"Name\">\n                <h1 className=\"Name\">\n                  Hello World, I'm John and I am a Full Stack Web Developer.\n                </h1>\n              </div>\n            </div>\n          </header>\n\n          <main>\n            <div className=\"Page-About\" id=\"About\">\n              <div className=\"aboutMe\">\n                <p className=\"aboutmebox\">\n                  My name is John Carbajal and I am a full stuck web developer\n                  ready for new opportunities. As of December 20th, 2019 I have\n                  completed the Punch Code 12 week highly immersive program for\n                  Full-stack Engineering. 60+ hours a week developing\n                  Front-End/Full-Stack projects in a project and team based\n                  learning environment. Learned up-to-date Front-End\n                  Languages(JavaScript, HTML, CSS) and Frameworks (React.js,\n                  React-Redux) along with Back-end Technologies(JSON, SQL,\n                  Express, Node.js). Worked in an Agile Environment utilizing\n                  the Scrum framework during our capstone project during the\n                  final 3 weeks. Learned problem solving techniques. Built\n                  prototypes for websites for production quality web\n                  applications.\n                </p>\n              </div>\n              <div className=\"johnpic\"></div>\n            </div>\n            <div className=\"Page-Projects\" id=\"Projects\">\n              <div className=\"Pro-name\">\n                <div className=\"name-sqr\">\n                  <p className=\"centerName\">My Projects</p>\n                  <Router>\n                    <div className=\"title-pro\">\n                      <Link to=\"LivingWill\">Living Will</Link>\n                      <Link to=\"Etsy\">Etsy Page</Link>\n                      <Link to=\"PubBar\">Pub Bar</Link>\n                    </div>\n                    <div className=\"Pro-info\">\n                      <div className=\"srq-info\">\n                        <Route path=\"/LivingWill\" component={LivingWill} />\n                        <Route path=\"/Etsy\" component={Etsy} />\n                        <Route path=\"/PubBar\" component={PubBar} />\n                      </div>\n                    </div>\n                  </Router>\n                </div>\n              </div>\n            </div>\n            <div className=\"Skill-con\" id=\"Skills\">\n              <div className=\"info-skills\">\n                Languesges Frameworks and back end Technologies\n              </div>\n              <div className=\"Page-Skills\">\n                <div className=\"html-logo\"></div>\n                <div className=\"css-logo\"></div>\n                <div className=\"javascript-logo\"></div>\n                <div className=\"React-logo\"></div>\n                <div className=\"Mysql-logo\"></div>\n                <div className=\"node-logo\"></div>\n                <div className=\"photoshop-logo\"></div>\n                <div className=\"xd-logo\"></div>\n                <div className=\"illistrator-logo\"></div>\n              </div>\n            </div>\n            <div className=\"Page-Contact\" id=\"Contact\">\n              <a href=\"https://github.com/Johnxnhoj/\" className=\"con-info\">\n                <Icon icon=\"github\" />\n              </a>\n              <a\n                href=\"https://www.linkedin.com/in/johnncarbajal/html/\"\n                className=\"con-info\"\n              >\n                <Icon icon=\"linkedin\" />\n              </a>\n              <a href=\"mailto:johnxjuanito@gmail.com\" className=\"con-info2\">\n                johnxjuanito@gmail.com\n              </a>\n              <a className=\"con-info2\">Phone: 702-824-3378</a>\n            </div>\n          </main>\n          <footer>footer</footer>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from \"react\"\nimport { useUsers } from \"../hooks\"\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\"\nimport Home from \"./Home\"\n\nfunction App() {\n  const { users } = useUsers()\n\n  console.log(users)\n\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n      </Switch>\n    </Router>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\"\nimport thunk from \"redux-thunk\"\nimport * as reducers from \"./ducks\"\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\nconst rootReducer = combineReducers(reducers)\nconst enhancer = composeEnhancers(applyMiddleware(thunk))\n\nconst store = createStore(rootReducer, enhancer)\n\nexport default store\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./styles/base.css\"\nimport App from \"./components/App\"\nimport * as serviceWorker from \"./lib/serviceWorker\"\nimport { Provider } from \"react-redux\"\nimport store from \"./redux/store\"\n\nconst Main = props => {\n  return <Provider store={store}>{props.children}</Provider>\n}\n\nReactDOM.render(\n  <Main>\n    <App />\n  </Main>,\n  document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n\nexport default Main\n"],"sourceRoot":""}